(四)	程序框架
1、	主要“类”结构
霍夫曼编码的首要步骤是对文本中的字符进行频率统计，CharCounter类提供了这样的接口，对输入的任意的文本文档进行ASCII码频率统计：类成员数组theCounts记录了其下标所对应ASCII码在文档中出现过的频次。之后，无论是编码过程还是解码过程，都需要HuffmanTree类创建霍夫曼树。而霍夫曼树则需要HuffmanNode来作为其根节点与叶节点；需要根据CharCounter类中的统计结果来生成Huffman树。HuffmanNode有value与weight两个基本成员变量，分别记录ASCII码值与在文档中出现的频次。HZIP作为整体调配主体，通过文件流操作与访问以上各类来达到压缩或者解压缩的目的。
2、	主要“方法”结构
CharCounter的构造函数之一CharCounter( InputStream input )将按照ASCII码值的顺序，一次统计每个字符出现的频次。HuffmanTree所拥有的函数方法比较多：首先，CreateTree方法根据类成员theCounter来创建HuffmanNode并按照Huffman树的创建原则创建HuffmanTree；读、写码表操作分别由ReadEncodingTable和WriteEncodingTable共有函数实现；GetCode函数完成Huffman编码的最后一步，即通过从根节点开始为每条路径赋0或1的方式为每个叶节点编码；与之对应，解码过程中，为了确定某个叶节点是哪一个ASCII码值，需要从根节点按照二进制码值搜寻到对应叶节点，返回该叶节点的value，以上操作由GetChar完成。HZIP分别为压缩和解压缩提供了两个函数接口Compress和Uncompress。

